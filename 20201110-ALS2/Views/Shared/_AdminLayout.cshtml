@using Microsoft.AspNetCore.Authorization
@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@inject IAuthorizationService authorizationService

<html lang="en">
<head>
  <meta name="viewport" content="width=device-width" />
  <link rel="stylesheet" asp-href-include="lib/bootstrap/dist/css/*.min.css" />
  <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="~/css/site.css" />
  <link rel="stylesheet" href="~/css/Master.css" />
  <title>@ViewBag.Title</title>
  <style>
    .input-validation-error {
      border-color: red;
      background-color: #fee;
    }
  </style>
  <style>
    .vl {
      border-left: 2px solid green;
      height: 50px;
    }
  </style>
  <script src="/lib/jquery/dist/jquery.min.js"></script>
  <script src="/lib/jquery-validation/dist/jquery.validate.min.js"></script>
  <script src="/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
  <script src='https://kit.fontawesome.com/a076d05399.js'></script>

</head>
<body class="m-1" style="background-color: #454b52">
  <nav class="bg-dark col-12 p-1 border border-info">
    <div class="row col-12" style="height: 50px">
      <div class="row col-10 mr-1" style="height: 50px">
        <a asp-controller="Home" asp-action="Index">
          <img class="img-thumbnail" src="https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_Icon.svg" width="50" height="50" />
        </a>
        @if ((await authorizationService.AuthorizeAsync(User, "SeStuderendePolicy")).Succeeded) {
          <a class="btn btn-sm btn-primary p-3" style="height: 50px" asp-action="Overview" asp-controller="Student">Studerende</a>
        }
        @if ((await authorizationService.AuthorizeAsync(User, "SeFagPolicy")).Succeeded) {
          <a class="btn btn-sm btn-primary p-3" style="height: 50px" asp-action="ViewCourses" asp-controller="Educator">Fag</a>
        }
        @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin")) {
          <a class="btn btn-sm btn-primary p-3" style="height: 50px" asp-action="Overview" asp-controller="Education">Uddannelse</a>
        }
        @if ((await authorizationService.AuthorizeAsync(User, "SeFraværPolicy")).Succeeded) {
          <a class="btn btn-sm btn-primary p-3" style="height: 50px" asp-action="Index" asp-controller="Charts">Fravær</a>
        }

        @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin")) {
          <div class="vl ml-1"></div>
          <a class="btn btn-sm btn-primary ml-1 p-3" style="height: 50px" asp-controller="Admin" asp-action="Index">Undervisere</a>
          <a class="btn btn-sm btn-primary p-3" style="height: 50px" asp-controller="Admin" asp-action="ListRoles">Roller</a>
        }

      </div>
      <div class="row col-2 ml-4" style="height: 50px">
        @if (signInManager.IsSignedIn(User)) {
          <form method="post" asp-action="Logout" asp-controller="Account">
            <button class="btn btn-sm btn-primary mr-3" style="height: 50px" type="submit"> Log Out @User.Identity.Name @*@((await userManager.GetUserAsync(User)).EducatorId)*@ </button>
          </form>
          <a asp-action="EditPassword" asp-controller="Account"><i class='fas fa-user-cog' style='font-size:50px'></i></a>
        } else {
          <a class="btn btn-sm btn-primary" style="height: 50px" asp-action="Login" asp-controller="Account">Log In</a>
        }
      </div>
    </div>
  </nav>
  @if (TempData["message"] != null) {
    <div class="alert alert-success">@TempData["message"]</div>
  }

  <div>
    @RenderBody()
  </div>
  @if (IsSectionDefined("Scripts")) {
    @await RenderSectionAsync("Scripts", required: true)
  }
</body>
</html>

